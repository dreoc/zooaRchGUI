#
dat <- fread("./beta.reg.data_06_11_2020.csv")
#Formatting the data the way that I tend to do it
dat[, .N, `Time Group`]
dat[`Time Group` %in% "Paleoindian", Time_No := 1]
dat[`Time Group` %in% "Archaic", Time_No := 2]
dat[`Time Group` %in% "Woodland", Time_No := 3]
dat[`Time Group` %in% "Late Prehistoric", Time_No := 4]
#
dat[, .N, Habitat]
dat[Habitat %in% "plains/rolling hills", c("Habitat_No", "Habitat_Label") := .(1, "Plains")]
dat[Habitat %in% "alluvial valley", c("Habitat_No", "Habitat_Label") := .(2, "Valley")]
dat[Habitat %in% "foothills/mountain", c("Habitat_No", "Habitat_Label") := .(3, "Foothills")]
#Cleaning Simpson's D data
dat[Simp1minusD == 0 | is.na(Simp1minusD), Simp1minusD := 0.001]
####Creating a cmdstan model that uses regularizing priors####
simpsons_standata <- list(
N_Sites = dat[, .N],
N_Periods = dat[, .N, Time_No][, .N],
N_Habitats = dat[, .N, Habitat_No][, .N],
pct_large_AI = dat[, Simp1minusD],
Period = dat[, Time_No],
Habitat = dat[, Habitat_No],
prior_alpha = c(0, 2.5),
prior_log_phi = c(0, 1), #different from the gamma(0.01, 0.01), but close to the mod3 results
prior_mu_beta_period = c(0, 1),
prior_mu_beta_habitat = c(0, 1),
prior_mu_beta_interaction = c(0, 1),
prior_logsigma_beta_period = c(-1, 0.5), #not exactly the half-normal(0, 1), but close-ish
prior_logsigma_beta_habitat = c(-1, 0.5),
prior_logsigma_beta_interaction = c(-1, 0.5)
)
betareg_priors_model <- cmdstan_model("./betareg_priors_stan_model.stan")
simpsons_betareg_regularizing_priors_fit <- betareg_priors_model$sample(
data = simpsons_standata,
iter_warmup = 1000,
iter_sampling = 1000,
chains = 4,
parallel_chains = 4,
refresh = 250,
adapt_delta = 0.80,
max_treedepth = 15
)
simpsons_betareg_regularizing_priors_fit$summary()
simpsons_betareg_regularizing_priors_fit$summary(c("sigma_period", "sigma_habitat", "sigma_interaction"))
simpsons_betareg_regularizing_priors_fit$summary(c("alpha", "phi"))
simpsons_betareg_regularizing_priors_fit$summary(c("theta"))
####Looking at the regularizing model and the observed model####
simpsons_betareg_regularizing_priors_stanfit <- rstan::read_stan_csv(simpsons_betareg_regularizing_priors_fit$output_files())
plot(simpsons_betareg_regularizing_priors_stanfit, pars = "theta")
plot(simpsons_betareg_regularizing_priors_stanfit, pars = c("beta_period", "beta_habitat"))
traceplot(simpsons_betareg_regularizing_priors_stanfit, pars = "theta")
simpsons_betareg_regularizing_priors_post <- extract(simpsons_betareg_regularizing_priors_stanfit)
#Visualization####
plot(NA, xlim = c(0.5, 4.5), ylim = c(0, 1), axes = F, ylab = "Simpson's 1-D Index", xlab = "Period", main = "Regularizing Priors")
box()
abline(v=seq(0,5,by=1),col="lightgray", lwd=.01)
abline(h=seq(0,1, by=.1),col="lightgray", lwd=.01)
s<-seq(0,1, by=.1)
axis(side = 2, at=s)
axis(side = 1, at = 1:4, labels = c("Paleoindian", "Archaic", "Woodland", "Late Prehistoric"))
for(i in 1:3) {
lines(x = 1:4 + c(-0.1, 0, 0.1)[i], y = colMeans(simpsons_betareg_regularizing_priors_post$theta[, , i]), col = c("dark green", "blue", "red")[i], type = "b", lty = c("solid", "dashed", "dotted")[i])
points(x = 1:4 + c(-0.1, 0, 0.1)[i], y = colMeans(simpsons_betareg_regularizing_priors_post$theta[, , i]), pch = 1, col = c("dark green", "blue", "red")[i])
for(j in 1:4) {
lines(x = rep(j + c(-0.1, 0, 0.1)[i], 2), y = quantile(simpsons_betareg_regularizing_priors_post$theta[, j, i], c(0.025, 0.975)), col = c("dark green", "blue", "red")[i])
}
}
legend(x = "topright", legend = c("plains", "valley", "foothills"), title = "Habitat", pch = 16, col = c("dark green", "blue", "red"), lty = c("solid", "dashed", "dotted"))
#points(x = rep(1:4) + rep(c(-0.1, 0, 0.1), each = 4), y = dat[, .(lgai = mean(Simp1minusD)), .(Time_No, Habitat_No)][order(Habitat_No, Time_No), lgai], pch = 4)
# PARAMETER INTERPRETATION
i=1; j=1
# BAYESIAN ESTIMATES
PlainsPaleoMu<-colMeans(simpsons_betareg_regularizing_priors_post$theta[, , i])[1]
names(PlainsPaleoMu)<-"PlainsPaleoMu"
c(PlainsPaleoMu,
quantile(simpsons_betareg_regularizing_priors_post$theta[, j, i], c(0.025, 0.975)))
i=2
ValleyPaleoMu<-colMeans(simpsons_betareg_regularizing_priors_post$theta[, , i])[1]
names(ValleyPaleoMu)<-"ValleyPaleoMu"
c(ValleyPaleoMu,
quantile(simpsons_betareg_regularizing_priors_post$theta[, j, i], c(0.025, 0.975)))
i=3
FoothillsPaleoMu<-colMeans(simpsons_betareg_regularizing_priors_post$theta[, , i])[1]
names(FoothillsPaleoMu)<-"FoothillsPaleoMu"
c(FoothillsPaleoMu,
quantile(simpsons_betareg_regularizing_priors_post$theta[, j, i], c(0.025, 0.975)))
# RAW DATA ESTIMATES
# MU
aggregate(Simp1minusD ~ `Habitat` + `Time Group`, data=dat, FUN=mean)[7:9,]
# SD
aggregate(Simp1minusD ~ `Habitat` + `Time Group`, data=dat, FUN=sd)[7:9,]
# N
aggregate(Simp1minusD ~ `Habitat` + `Time Group`, data=dat, FUN=length)[7:9,]
#Visualization####W 717 x H 568
plot(NA, xlim = c(0.5, 4.5), ylim = c(0, 1), axes = F, ylab = "Simpson's 1-D Index", xlab = "Period", main = "Regularizing Priors")
box()
abline(v=seq(0,5,by=1),col="lightgray", lwd=.01)
abline(h=seq(0,1, by=.1),col="lightgray", lwd=.01)
s<-seq(0,1, by=.1)
axis(side = 2, at=s)
axis(side = 1, at = 1:4, labels = c("Paleoindian", "Archaic", "Woodland", "Late Prehistoric"))
for(i in 1:3) {
lines(x = 1:4 + c(-0.1, 0, 0.1)[i], y = colMeans(simpsons_betareg_regularizing_priors_post$theta[, , i]), col = c("dark green", "blue", "red")[i], type = "b", lty = c("solid", "dashed", "dotted")[i])
points(x = 1:4 + c(-0.1, 0, 0.1)[i], y = colMeans(simpsons_betareg_regularizing_priors_post$theta[, , i]), pch = 1, col = c("dark green", "blue", "red")[i])
for(j in 1:4) {
lines(x = rep(j + c(-0.1, 0, 0.1)[i], 2), y = quantile(simpsons_betareg_regularizing_priors_post$theta[, j, i], c(0.025, 0.975)), col = c("dark green", "blue", "red")[i])
}
}
legend(x = "topright", legend = c("plains", "valley", "foothills"), title = "Habitat", pch = 16, col = c("dark green", "blue", "red"), lty = c("solid", "dashed", "dotted"))
####Script for the Margalef Diversity Index model reanalysis####
#Uses a Gamma regression because Margalef is positive-bounded
#Model code (gamma_regression_user_priors.stan) uses normal distributions for model parameters
library(tidyverse)
library(emmeans)
library(brms)
library(tidybayes)
library(rstudioapi)
library(betareg)
library(glmmTMB)
library(rstan)
#new packages for the code I added
library(bayesplot)
library(data.table)
library(cmdstanr)
#
dat <- fread("./beta.reg.data_06_11_2020.csv")
#
#Formatting the data the way that I tend to do it
dat[, .N, `Time Group`]
dat[`Time Group` %in% "Paleoindian", Time_No := 1]
dat[`Time Group` %in% "Archaic", Time_No := 2]
dat[`Time Group` %in% "Woodland", Time_No := 3]
dat[`Time Group` %in% "Late Prehistoric", Time_No := 4]
#
dat[, .N, Habitat]
dat[Habitat %in% "plains/rolling hills", c("Habitat_No", "Habitat_Label") := .(1, "Plains")]
dat[Habitat %in% "alluvial valley", c("Habitat_No", "Habitat_Label") := .(2, "Valley")]
dat[Habitat %in% "foothills/mountain", c("Habitat_No", "Habitat_Label") := .(3, "Foothills")]
#
#Margalef is (S - 1) / log(N) [N = NISP, S = # of taxa]
dat[, Margalef_calc := (`Species Count` - 1) / log(`Total NISP`)]
#For Margalef == 0, we need to make some value above 0 to model effectively
dat[Margalef_calc == 0, Margalef_calc := 0.001]
dat[is.infinite(Margalef_calc) | is.na(Margalef_calc), Margalef_calc := 0.001]
margalef_standata <- list(
N_Sites = dat[!is.na(Margalef), .N],
N_Periods = dat[!is.na(Margalef), .N, Time_No][, .N],
N_Habitats = dat[!is.na(Margalef), .N, Habitat_No][, .N],
Margalef = dat[!is.na(Margalef), Margalef_calc],
Period = dat[!is.na(Margalef), Time_No],
Habitat = dat[!is.na(Margalef), Habitat_No],
prior_alpha = c(0, 2.5),
prior_log_phi = c(0, 1), #different from the gamma(0.01, 0.01), but close to the mod3 results
prior_mu_beta_period = c(0, 1),
prior_mu_beta_habitat = c(0, 1),
prior_mu_beta_interaction = c(0, 1),
prior_logsigma_beta_period = c(-1, 0.5), #not exactly the half-normal(0, 1), but close-ish
prior_logsigma_beta_habitat = c(-1, 0.5),
prior_logsigma_beta_interaction = c(-1, 0.5)
)
gamma_priors_model <- cmdstan_model("./gamma_regression_user_priors.stan")
gamma_regularizing_priors_fit <- gamma_priors_model$sample(
data = margalef_standata,
iter_warmup = 1000,
iter_sampling = 1000,
chains = 4,
parallel_chains = 4,
refresh = 250,
adapt_delta = 0.80,
max_treedepth = 15
)
gamma_regularizing_priors_fit$summary()
gamma_regularizing_priors_fit$summary(c("sigma_period", "sigma_habitat", "sigma_interaction"))
gamma_regularizing_priors_fit$summary(c("phi"))
gamma_regularizing_priors_fit$summary(c("mu"))
gamma_regularizing_priors_fit$summary(c("mu", "mu_period", "mu_habitat"))
#
gamma_regularizing_priors_stanfit <- rstan::read_stan_csv(gamma_regularizing_priors_fit$output_files())
plot(gamma_regularizing_priors_stanfit, pars = c("mu"))
plot(gamma_regularizing_priors_stanfit, pars = c("beta_period", "beta_habitat"))
traceplot(gamma_regularizing_priors_stanfit, pars = "mu")
gamma_regularizing_priors_post <- extract(gamma_regularizing_priors_stanfit)
#W 717 x H 568
plot(NA, xlim = c(0.5, 4.5), ylim = c(0, 3.1), axes = F, ylab = "Margalef Index", xlab = "Period", main = "Regularizing Priors")
box()
abline(h=1:5, v=seq(0,5,by=1),col="lightgray", lwd=.01)
abline(h=seq(0,5, by=.5),col="lightgray", lwd=.01)
s<-seq(0,5, by=.25)
axis(side = 2, at=s)
axis(side = 1, at = 1:4, labels = c("Paleoindian", "Archaic", "Woodland", "Late Prehistoric"))
for(i in 1:3) {
lines(x = 1:4 + c(-0.1, 0, 0.1)[i],
y = colMeans(gamma_regularizing_priors_post$mu[, , i]), col = c("dark green", "blue", "red")[i], lwd=1,type = "b", lty = c("solid", "dashed", "dotted")[i])
points(x = 1:4 + c(-0.1, 0, 0.1)[i], y = colMeans(gamma_regularizing_priors_post$mu[, , i]), pch = 1, col = c("dark green", "blue", "red")[i])
for(j in 1:4) {
lines(x = rep(j + c(-0.1, 0, 0.1)[i], 2),
y = quantile(gamma_regularizing_priors_post$mu[, j, i], c(0.025, 0.975)), col = c("dark green", "blue", "red")[i])
}
}
legend(x = "topright", legend = c("plains", "valley", "foothills"), title = "Habitat", pch = 16, col = c("dark green", "blue", "red"), lty = c("solid", "dashed", "dotted"))
points(x = rep(1:4) + rep(c(-0.1, 0, 0.1), each = 4), y = lg_ai_observations[, Empirical_Mean], pch = 4)
### PARAMETER INTERPRETATION
i=1; j=1
# BAYESIAN ESTIMATES
PlainsPaleoMu<-colMeans(gamma_regularizing_priors_post$mu[, , i])[1]
names(PlainsPaleoMu)<-"PlainsPaleoMu"
c(PlainsPaleoMu,
quantile(gamma_regularizing_priors_post$mu[, j, i], c(0.025, 0.975)))
i=2
ValleyPaleoMu<-colMeans(gamma_regularizing_priors_post$mu[, , i])[1]
names(ValleyPaleoMu)<-"ValleyPaleoMu"
c(ValleyPaleoMu,
quantile(gamma_regularizing_priors_post$mu[, j, i], c(0.025, 0.975)))
i=3
FoothillsPaleoMu<-colMeans(gamma_regularizing_priors_post$mu[, , i])[1]
names(FoothillsPaleoMu)<-"FoothillsPaleoMu"
c(FoothillsPaleoMu,
quantile(gamma_regularizing_priors_post$mu[, j, i], c(0.025, 0.975)))
# RAW DATA ESTIMATES
# MU
aggregate(Margalef ~ `Habitat` + `Time Group`, data=dat, FUN=mean)[7:9,]
# SD
aggregate(Margalef ~ `Habitat` + `Time Group`, data=dat, FUN=sd)[7:9,]
# N
aggregate(Margalef ~ `Habitat` + `Time Group`, data=dat, FUN=length)[7:9,]
library(tidyverse)
library(emmeans)
library(brms)
library(tidybayes)
library(rstudioapi)
library(betareg)
library(glmmTMB)
library(rstan)
#new packages for the code I added
library(bayesplot)
library(data.table)
library(cmdstanr)
#
dat <- fread("./beta.reg.data_06_11_2020.csv")
#Formatting the data the way that I tend to do it
dat[, .N, `Time Group`]
dat[`Time Group` %in% "Paleoindian", Time_No := 1]
dat[`Time Group` %in% "Archaic", Time_No := 2]
dat[`Time Group` %in% "Woodland", Time_No := 3]
dat[`Time Group` %in% "Late Prehistoric", Time_No := 4]
#
dat[, .N, Habitat]
dat[Habitat %in% "plains/rolling hills", c("Habitat_No", "Habitat_Label") := .(1, "Plains")]
dat[Habitat %in% "alluvial valley", c("Habitat_No", "Habitat_Label") := .(2, "Valley")]
dat[Habitat %in% "foothills/mountain", c("Habitat_No", "Habitat_Label") := .(3, "Foothills")]
#Cleaning Simpson's D data
dat[Simp1minusD == 0 | is.na(Simp1minusD), Simp1minusD := 0.001]
####Creating a cmdstan model that uses regularizing priors####
simpsons_standata <- list(
N_Sites = dat[, .N],
N_Periods = dat[, .N, Time_No][, .N],
N_Habitats = dat[, .N, Habitat_No][, .N],
pct_large_AI = dat[, Simp1minusD],
Period = dat[, Time_No],
Habitat = dat[, Habitat_No],
prior_alpha = c(0, 2.5),
prior_log_phi = c(0, 1), #different from the gamma(0.01, 0.01), but close to the mod3 results
prior_mu_beta_period = c(0, 1),
prior_mu_beta_habitat = c(0, 1),
prior_mu_beta_interaction = c(0, 1),
prior_logsigma_beta_period = c(-1, 0.5), #not exactly the half-normal(0, 1), but close-ish
prior_logsigma_beta_habitat = c(-1, 0.5),
prior_logsigma_beta_interaction = c(-1, 0.5)
)
betareg_priors_model <- cmdstan_model("./betareg_priors_stan_model.stan")
simpsons_betareg_regularizing_priors_fit <- betareg_priors_model$sample(
data = simpsons_standata,
iter_warmup = 1000,
iter_sampling = 1000,
chains = 4,
parallel_chains = 4,
refresh = 250,
adapt_delta = 0.80,
max_treedepth = 15
)
simpsons_betareg_regularizing_priors_fit$summary()
simpsons_betareg_regularizing_priors_fit$summary(c("sigma_period", "sigma_habitat", "sigma_interaction"))
simpsons_betareg_regularizing_priors_fit$summary(c("alpha", "phi"))
simpsons_betareg_regularizing_priors_fit$summary(c("theta"))
####Looking at the regularizing model and the observed model####
simpsons_betareg_regularizing_priors_stanfit <- rstan::read_stan_csv(simpsons_betareg_regularizing_priors_fit$output_files())
plot(simpsons_betareg_regularizing_priors_stanfit, pars = "theta")
plot(simpsons_betareg_regularizing_priors_stanfit, pars = c("beta_period", "beta_habitat"))
traceplot(simpsons_betareg_regularizing_priors_stanfit, pars = "theta")
simpsons_betareg_regularizing_priors_post <- extract(simpsons_betareg_regularizing_priors_stanfit)
#Visualization####W 717 x H 568
plot(NA, xlim = c(0.5, 4.5), ylim = c(0, 1),
axes = F, ylab = "Simpson's 1-D Index", xlab = "", main = "Bayesian Reanalysis")
box()
abline(v=seq(0,5,by=1),col="lightgray", lwd=.01)
abline(h=seq(0,1, by=.1),col="lightgray", lwd=.01)
s<-seq(0,1, by=.1)
axis(side = 2, at=s)
axis(side = 1, at = 1:4, labels = c("Paleoindian", "Archaic", "Woodland", "Late Prehistoric"))
for(i in 1:3) {
lines(lwd=2, x = 1:4 + c(-0.1, 0, 0.1)[i], y = colMeans(simpsons_betareg_regularizing_priors_post$theta[, , i]), col = c("dark green", "blue", "red")[i], type = "b", lty = c("solid", "dashed", "dotted")[i])
points(x = 1:4 + c(-0.1, 0, 0.1)[i], y = colMeans(simpsons_betareg_regularizing_priors_post$theta[, , i]), pch = 1, col = c("dark green", "blue", "red")[i])
for(j in 1:4) {
lines(lwd=2,x = rep(j + c(-0.1, 0, 0.1)[i], 2), y = quantile(simpsons_betareg_regularizing_priors_post$theta[, j, i], c(0.025, 0.975)), col = c("dark green", "blue", "red")[i])
}
}
legend(x = "topright", legend = c("plains", "valley", "foothills"), title = "Habitat", pch = 16, col = c("dark green", "blue", "red"), lty = c("solid", "dashed", "dotted"))
#points(x = rep(1:4) + rep(c(-0.1, 0, 0.1), each = 4), y = dat[, .(lgai = mean(Simp1minusD)), .(Time_No, Habitat_No)][order(Habitat_No, Time_No), lgai], pch = 4)
# PARAMETER INTERPRETATION
i=1; j=1
# BAYESIAN ESTIMATES
PlainsPaleoMu<-colMeans(simpsons_betareg_regularizing_priors_post$theta[, , i])[1]
names(PlainsPaleoMu)<-"PlainsPaleoMu"
c(PlainsPaleoMu,
quantile(simpsons_betareg_regularizing_priors_post$theta[, j, i], c(0.025, 0.975)))
i=2
ValleyPaleoMu<-colMeans(simpsons_betareg_regularizing_priors_post$theta[, , i])[1]
names(ValleyPaleoMu)<-"ValleyPaleoMu"
c(ValleyPaleoMu,
quantile(simpsons_betareg_regularizing_priors_post$theta[, j, i], c(0.025, 0.975)))
i=3
FoothillsPaleoMu<-colMeans(simpsons_betareg_regularizing_priors_post$theta[, , i])[1]
names(FoothillsPaleoMu)<-"FoothillsPaleoMu"
c(FoothillsPaleoMu,
quantile(simpsons_betareg_regularizing_priors_post$theta[, j, i], c(0.025, 0.975)))
# RAW DATA ESTIMATES
# MU
aggregate(Simp1minusD ~ `Habitat` + `Time Group`, data=dat, FUN=mean)[7:9,]
# SD
aggregate(Simp1minusD ~ `Habitat` + `Time Group`, data=dat, FUN=sd)[7:9,]
# N
aggregate(Simp1minusD ~ `Habitat` + `Time Group`, data=dat, FUN=length)[7:9,]
####Script for the Margalef Diversity Index model reanalysis####
#Uses a Gamma regression because Margalef is positive-bounded
#Model code (gamma_regression_user_priors.stan) uses normal distributions for model parameters
library(tidyverse)
library(emmeans)
library(brms)
library(tidybayes)
library(rstudioapi)
library(betareg)
library(glmmTMB)
library(rstan)
#new packages for the code I added
library(bayesplot)
library(data.table)
library(cmdstanr)
#
dat <- fread("./beta.reg.data_06_11_2020.csv")
#
#Formatting the data the way that I tend to do it
dat[, .N, `Time Group`]
dat[`Time Group` %in% "Paleoindian", Time_No := 1]
dat[`Time Group` %in% "Archaic", Time_No := 2]
dat[`Time Group` %in% "Woodland", Time_No := 3]
dat[`Time Group` %in% "Late Prehistoric", Time_No := 4]
#
dat[, .N, Habitat]
dat[Habitat %in% "plains/rolling hills", c("Habitat_No", "Habitat_Label") := .(1, "Plains")]
dat[Habitat %in% "alluvial valley", c("Habitat_No", "Habitat_Label") := .(2, "Valley")]
dat[Habitat %in% "foothills/mountain", c("Habitat_No", "Habitat_Label") := .(3, "Foothills")]
#
#Margalef is (S - 1) / log(N) [N = NISP, S = # of taxa]
dat[, Margalef_calc := (`Species Count` - 1) / log(`Total NISP`)]
#For Margalef == 0, we need to make some value above 0 to model effectively
dat[Margalef_calc == 0, Margalef_calc := 0.001]
dat[is.infinite(Margalef_calc) | is.na(Margalef_calc), Margalef_calc := 0.001]
margalef_standata <- list(
N_Sites = dat[!is.na(Margalef), .N],
N_Periods = dat[!is.na(Margalef), .N, Time_No][, .N],
N_Habitats = dat[!is.na(Margalef), .N, Habitat_No][, .N],
Margalef = dat[!is.na(Margalef), Margalef_calc],
Period = dat[!is.na(Margalef), Time_No],
Habitat = dat[!is.na(Margalef), Habitat_No],
prior_alpha = c(0, 2.5),
prior_log_phi = c(0, 1), #different from the gamma(0.01, 0.01), but close to the mod3 results
prior_mu_beta_period = c(0, 1),
prior_mu_beta_habitat = c(0, 1),
prior_mu_beta_interaction = c(0, 1),
prior_logsigma_beta_period = c(-1, 0.5), #not exactly the half-normal(0, 1), but close-ish
prior_logsigma_beta_habitat = c(-1, 0.5),
prior_logsigma_beta_interaction = c(-1, 0.5)
)
gamma_priors_model <- cmdstan_model("./gamma_regression_user_priors.stan")
gamma_regularizing_priors_fit <- gamma_priors_model$sample(
data = margalef_standata,
iter_warmup = 1000,
iter_sampling = 1000,
chains = 4,
parallel_chains = 4,
refresh = 250,
adapt_delta = 0.80,
max_treedepth = 15
)
gamma_regularizing_priors_fit$summary()
gamma_regularizing_priors_fit$summary(c("sigma_period", "sigma_habitat", "sigma_interaction"))
gamma_regularizing_priors_fit$summary(c("phi"))
gamma_regularizing_priors_fit$summary(c("mu"))
gamma_regularizing_priors_fit$summary(c("mu", "mu_period", "mu_habitat"))
#
gamma_regularizing_priors_stanfit <- rstan::read_stan_csv(gamma_regularizing_priors_fit$output_files())
plot(gamma_regularizing_priors_stanfit, pars = c("mu"))
plot(gamma_regularizing_priors_stanfit, pars = c("beta_period", "beta_habitat"))
traceplot(gamma_regularizing_priors_stanfit, pars = "mu")
gamma_regularizing_priors_post <- extract(gamma_regularizing_priors_stanfit)
#W 717 x H 568
plot(NA, xlim = c(0.5, 4.5), ylim = c(0, 3.1),
axes = F, ylab = "Margalef Index",
xlab = "", main = "Bayesian Reanalysis")
box()
abline(h=1:5, v=seq(0,5,by=1),col="lightgray", lwd=.01)
abline(h=seq(0,5, by=.5),col="lightgray", lwd=.01)
s<-seq(0,5, by=.25)
axis(side = 2, at=s)
axis(side = 1, at = 1:4, labels = c("Paleoindian", "Archaic", "Woodland", "Late Prehistoric"))
for(i in 1:3) {
lines(x = 1:4 + c(-0.1, 0, 0.1)[i],
y = colMeans(gamma_regularizing_priors_post$mu[, , i]), col = c("dark green", "blue", "red")[i], lwd=1,type = "b", lty = c("solid", "dashed", "dotted")[i])
points(x = 1:4 + c(-0.1, 0, 0.1)[i], y = colMeans(gamma_regularizing_priors_post$mu[, , i]), pch = 1, col = c("dark green", "blue", "red")[i])
for(j in 1:4) {
lines(x = rep(j + c(-0.1, 0, 0.1)[i], 2),
y = quantile(gamma_regularizing_priors_post$mu[, j, i], c(0.025, 0.975)), col = c("dark green", "blue", "red")[i])
}
}
legend(x = "topright", legend = c("plains", "valley", "foothills"), title = "Habitat", pch = 16, col = c("dark green", "blue", "red"), lty = c("solid", "dashed", "dotted"))
points(x = rep(1:4) + rep(c(-0.1, 0, 0.1), each = 4), y = lg_ai_observations[, Empirical_Mean], pch = 4)
### PARAMETER INTERPRETATION
i=1; j=1
# BAYESIAN ESTIMATES
PlainsPaleoMu<-colMeans(gamma_regularizing_priors_post$mu[, , i])[1]
names(PlainsPaleoMu)<-"PlainsPaleoMu"
c(PlainsPaleoMu,
quantile(gamma_regularizing_priors_post$mu[, j, i], c(0.025, 0.975)))
i=2
ValleyPaleoMu<-colMeans(gamma_regularizing_priors_post$mu[, , i])[1]
names(ValleyPaleoMu)<-"ValleyPaleoMu"
c(ValleyPaleoMu,
quantile(gamma_regularizing_priors_post$mu[, j, i], c(0.025, 0.975)))
i=3
FoothillsPaleoMu<-colMeans(gamma_regularizing_priors_post$mu[, , i])[1]
names(FoothillsPaleoMu)<-"FoothillsPaleoMu"
c(FoothillsPaleoMu,
quantile(gamma_regularizing_priors_post$mu[, j, i], c(0.025, 0.975)))
# RAW DATA ESTIMATES
# MU
aggregate(Margalef ~ `Habitat` + `Time Group`, data=dat, FUN=mean)[7:9,]
# SD
aggregate(Margalef ~ `Habitat` + `Time Group`, data=dat, FUN=sd)[7:9,]
# N
aggregate(Margalef ~ `Habitat` + `Time Group`, data=dat, FUN=length)[7:9,]
#W 717 x H 568
plot(NA, xlim = c(0.5, 4.5), ylim = c(0, 3.1),
axes = F, ylab = "Margalef Index",
xlab = "", main = "Bayesian Reanalysis")
box()
abline(h=1:5, v=seq(0,5,by=1),col="lightgray", lwd=.01)
abline(h=seq(0,5, by=.5),col="lightgray", lwd=.01)
s<-seq(0,5, by=.25)
axis(side = 2, at=s)
axis(side = 1, at = 1:4, labels = c("Paleoindian", "Archaic", "Woodland", "Late Prehistoric"))
for(i in 1:3) {
lines(lwd=2,x = 1:4 + c(-0.1, 0, 0.1)[i],
y = colMeans(gamma_regularizing_priors_post$mu[, , i]), col = c("dark green", "blue", "red")[i], lwd=1,type = "b", lty = c("solid", "dashed", "dotted")[i])
points(x = 1:4 + c(-0.1, 0, 0.1)[i], y = colMeans(gamma_regularizing_priors_post$mu[, , i]), pch = 1, col = c("dark green", "blue", "red")[i])
for(j in 1:4) {
lines(lwd=2,x = rep(j + c(-0.1, 0, 0.1)[i], 2),
y = quantile(gamma_regularizing_priors_post$mu[, j, i], c(0.025, 0.975)), col = c("dark green", "blue", "red")[i])
}
}
legend(x = "topright", legend = c("plains", "valley", "foothills"), title = "Habitat", pch = 16, col = c("dark green", "blue", "red"), lty = c("solid", "dashed", "dotted"))
points(x = rep(1:4) + rep(c(-0.1, 0, 0.1), each = 4), y = lg_ai_observations[, Empirical_Mean], pch = 4)
#W 717 x H 568
plot(NA, xlim = c(0.5, 4.5), ylim = c(0, 3.1),
axes = F, ylab = "Margalef Index",
xlab = "", main = "Bayesian Reanalysis")
box()
abline(h=1:5, v=seq(0,5,by=1),col="lightgray", lwd=.01)
abline(h=seq(0,5, by=.5),col="lightgray", lwd=.01)
s<-seq(0,5, by=.25)
axis(side = 2, at=s)
axis(side = 1, at = 1:4, labels = c("Paleoindian", "Archaic", "Woodland", "Late Prehistoric"))
for(i in 1:3) {
lines(lwd=2,x = 1:4 + c(-0.1, 0, 0.1)[i],
y = colMeans(gamma_regularizing_priors_post$mu[, , i]), col = c("dark green", "blue", "red")[i], lwd=1,type = "b", lty = c("solid", "dashed", "dotted")[i])
points(x = 1:4 + c(-0.1, 0, 0.1)[i], y = colMeans(gamma_regularizing_priors_post$mu[, , i]), pch = 1, col = c("dark green", "blue", "red")[i])
for(j in 1:4) {
lines(lwd=2,x = rep(j + c(-0.1, 0, 0.1)[i], 2),
y = quantile(gamma_regularizing_priors_post$mu[, j, i], c(0.025, 0.975)), col = c("dark green", "blue", "red")[i])
}
}
#W 717 x H 568
plot(NA, xlim = c(0.5, 4.5), ylim = c(0, 3.1),
axes = F, ylab = "Margalef Index",
xlab = "", main = "Bayesian Reanalysis")
box()
abline(h=1:5, v=seq(0,5,by=1),col="lightgray", lwd=.01)
abline(h=seq(0,5, by=.5),col="lightgray", lwd=.01)
s<-seq(0,5, by=.25)
axis(side = 2, at=s)
axis(side = 1, at = 1:4, labels = c("Paleoindian", "Archaic", "Woodland", "Late Prehistoric"))
for(i in 1:3) {
lines(lwd=2, x = 1:4 + c(-0.1, 0, 0.1)[i],
y = colMeans(gamma_regularizing_priors_post$mu[, , i]), col = c("dark green", "blue", "red")[i],type = "b", lty = c("solid", "dashed", "dotted")[i])
points(x = 1:4 + c(-0.1, 0, 0.1)[i], y = colMeans(gamma_regularizing_priors_post$mu[, , i]), pch = 1, col = c("dark green", "blue", "red")[i])
for(j in 1:4) {
lines(lwd=2, x = rep(j + c(-0.1, 0, 0.1)[i], 2),
y = quantile(gamma_regularizing_priors_post$mu[, j, i], c(0.025, 0.975)), col = c("dark green", "blue", "red")[i])
}
}
legend(x = "topright", legend = c("plains", "valley", "foothills"), title = "Habitat", pch = 16, col = c("dark green", "blue", "red"), lty = c("solid", "dashed", "dotted"))
points(x = rep(1:4) + rep(c(-0.1, 0, 0.1), each = 4), y = lg_ai_observations[, Empirical_Mean], pch = 4)
