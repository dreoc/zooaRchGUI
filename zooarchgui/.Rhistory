# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
plot(a,add=F, main=name)
j=j+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
plot(a,add=F, main=name)
j=j+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
plot(a,add=F, main=name)
j=j+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
plot(a,add=F, main=name)
j=j+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
plot(a,add=F, main=name)
j=j+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
plot(a,add=F, main=name)
j=j+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
plot(a,add=F, main=name)
j=j+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
plot(a,add=F, main=name)
j=j+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
plot(a,add=F, main=name)
j=j+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
plot(a,add=F, main=name)
j=j+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
plot(a,add=F, main=name)
j=j+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
plot(a,add=F, main=name)
j=j+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
plot(a,add=F, main=name)
j=j+1
j=1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
plot(a,add=F)
predictors<-stack(files)
files
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
plot(a,add=F)
predictors<-stack(files)
files
resample(files[3],files[1])
i=1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[i])
plot(a,add=F, main=name)
i=i+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[i])
plot(a,add=F, main=name)
i=i+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[i])
plot(a,add=F, main=name)
i=i+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
# files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[i])
plot(a,add=F, main=name)
i=i+1
i=1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[i])
plot(a,add=T, main=name)
i=i+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[i])
plot(a,add=T, main=name)
i=i+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[i])
plot(a,add=T, main=name)
i=i+1
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[i])
plot(a,add=T, main=name)
i=i+1
files
files[1]
raster(files[i])
a<-raster(files[i])
i=1
a<-raster(files[i])
raster(files[i])
i=i+1
raster(files[i])
i=i+1
raster(files[i])
raster(files[4])
?stack
a<-raster(files[1:4])
a<-raster(files[1])
b<-raster(files[2])
c<-raster(files[3])
d<-raster(files[4])
t<-time[j]
name<-paste("GBC_BP_",t,sep="")
files<-list.files(path,full.names = TRUE)
files<-files[-grep("GBC",files)]
files<-files[grep(as.character(t),files)]
a<-raster(files[1])
b<-raster(files[2])
c<-raster(files[3])
d<-raster(files[4])
c
d
b
resample(b,a)
b<-resample(b,a)
predictors<-stack(a,b,c,d)
b<-resample(b,a)
predictors<-stack(a,b,c,d)
predictors
pars<-read.table("D:\\sdmrasters_interaction_inandoutplains\\modcoefAIC1interaction.txt",sep=",")[,-c(1,20)]
pars<-read.table("M:\\DissertationData\\sdmrasters_interaction_inandoutplains\\modcoefAIC1interaction.txt",sep=",")[,-c(1,20)]
pars<-read.table("M:\\DissertationData\\sdmrasters\\modcoefAIC1.txt",sep=",",as.is=T)[,-c(2,12)]
pars<-read.table("M:\\DissertationData\\sdmrasters_interaction_inandoutplains\\modcoefAIC1interaction.txt",sep=",")[,-c(1,20)]
pars<-read.table("M:\\DissertationData\\irwls\\modcoefAIC1.txt",sep=",",as.is=T)[,-c(2,12)]
head(pars)
pars.m<-as.matrix(pars[,-1]);rownames(pars.m)<-pars[,1]
morph<-read.csv("C:/Users/EOC/Documents/Research/Manuscripts/In Progress/grassSDM/workingmorphologytable.csv",as.is=T)
morph<-read.csv("M:\DissertationData\workingmorphologytable.csv",as.is=T)
morph<-read.csv("M:\\DissertationData\\workingmorphologytable.csv",as.is=T)
names<-sub("_"," ",pars[,1])
head(morph)
wh<-function(a){
which(morph[,1]==names[a])
}
ht<-morph[sapply(1:116,wh),3]
wh<-function(a){
which(morph[,1]==names[a])
}
morph
ht<-morph[sapply(1:116,wh),3]
morph<-read.csv("M:\\DissertationData\\workingmorphologytable.csv",as.is=T)
class(morph)
sapply(1:116,wh)
names
pars
pars.m
read.table("M:\\DissertationData\\irwls\\modcoefAIC1.txt",sep=",",as.is=T)
.
pars
pars<-read.table("M:\\DissertationData\\sdmrasters_interaction_inandoutplains\\modcoefAIC1interaction.txt",sep=",")[,-c(1,20)]
pars
pars<-read.table("M:\\DissertationData\\sdmrasters_interaction_inandoutplains\\modcoefAIC1interaction.txt",sep=",")[,-c(1,20)]
head(pars)
pars
pars<-read.table("M:\DissertationData\coefbackup\modcoefAIC1_additive.txt",sep=",",as.is=T)[,-c(2,12)]
pars<-read.table("M:\DissertationData\coefbackup\modcoefAIC1_additive.txt",sep=",",as.is=T)[,-c(2,12)]
pars<-read.table("M:\\DissertationData\\coefbackup\\modcoefAIC1_additive.txt",sep=",",as.is=T)[,-c(2,12)]
pars
head(pars)
pars.m<-as.matrix(pars[,-1]);rownames(pars.m)<-pars[,1]
morph<-read.csv("M:\\DissertationData\\workingmorphologytable.csv",as.is=T)
names<-sub("_"," ",pars[,1])
head(morph)
wh<-function(a){
which(morph[,1]==names[a])
}
ht<-morph[sapply(1:116,wh),3]
ht
i=1
a<-exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2) / (1 + exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2))
a<-(a * (exp(3.99 - 0.95 * log(ht[i])))*(ht[i]))
a
b<-a
for (i in 2:116){
cat(names[i], "Paleo SDM Model No.",i,"of time period",j, "\n")
a<-exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2) / (1 + exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2))
b<-b + (a * ( exp(3.99 - 0.95 * log(ht[i]))*(ht[i])))#
#plot(b,col=jet.colors(100))
}
plot(b)
i=1
a<-exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2) / (1 + exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2))
a<-(a * (exp(3.99 - 0.95 * log(ht[i]))))#*(ht[i]))
b<-a
for (i in 2:116){
cat(names[i], "Paleo SDM Model No.",i,"of time period",j, "\n")
a<-exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2) / (1 + exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2))
b<-b + (a * ( exp(3.99 - 0.95 * log(ht[i]))*(ht[i])))#
#plot(b,col=jet.colors(100))
}
plot(b,col=jet.colors(100),asp=1)
i=1
a<-exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2) / (1 + exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2))
a<-(a * (exp(3.99 - 0.95 * log(ht[i]))))#*(ht[i]))
b<-a
for (i in 2:116){
cat(names[i], "Paleo SDM Model No.",i,"of time period",j, "\n")
a<-exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2) / (1 + exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2))
b<-b + (a * ( exp(3.99 - 0.95 * log(ht[i]))))#*(ht[i])))#
#plot(b,col=jet.colors(100))
}
plot(b,col=jet.colors(100),asp=1)
plot(gp,add=T,lwd=2)
plot(states,add=T,lty=2)
A<-values(b)
i=1
a<-exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2) / (1 + exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2))
a<-(a * ( exp(3.99 - 0.95 * log(ht[i]))*(ht[i])) )
b<-a
for (i in 2:116){
cat(names[i], "Paleo SDM Model No.",i,"of time period",j, "\n")
a<-exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2) / (1 + exp(pars.m[i,1] + pars.m[i,2]*predictors[[2]] + pars.m[i,3]*predictors[[2]]^2 + pars.m[i,4]*predictors[[4]] + pars.m[i,5]*predictors[[4]]^2 + pars.m[i,6]*predictors[[1]] + pars.m[i,7]*predictors[[1]]^2 + pars.m[i,8]*predictors[[3]] + pars.m[i,9]*predictors[[3]]^2))
b<-b + (a * ( exp(3.99 - 0.95 * log(ht[i]))*(ht[i])) )#
#plot(b,col=jet.colors(100))
}
plot(b,col=jet.colors(100),asp=1)
plot(gp,add=T,lwd=2)
plot(states,add=T,lty=2)
B<-values(b)
plot(A,B)
cor(A,B)
cor(A,B,na.action(omit))
cor(A,B,na.action("omit"))
?cor.test
getOption("na.action")
cor.test(A,B)
plot(A,B)
plot(A,sqrt(B))
plot(A,log(B))
cor.test(A,log(B))
cor.test(A,sqrt(B))
bi<-read.table(file.choose(),sep=",",header=T)
bi
?gnls
??gnls
mg<-c(50,60,70)
cc<-c(100,110,120)
mg/cc
ht<-c(10,20,30)
wd<-c(5,6,7)
ht*wd
cc<-ht*wd
th<-c(.1,.2,.3)
cc<-ht*wd*th
cc
th<-c(.1,.2,.3)
mg/cc
th<-c(1,2,3)
cc<-ht*wd*th
cc
mg/cc
mg
mg<-c(80,60,40)
mg/cc
ccc
cc
cc<-ht*wd*th
th
th<-c(3,2,1)
cc<-ht*wd*th
cc
mg/cc
ht
mg/cc*ht
(mg/cc)*ht
ht
mg<-c(50,60,70)
ht<-c(10,20,30)
wd<-c(5,6,7)
th<-c(.9,.5,.1)
cc<-ht*wd*th
cc
mg<-c(50,60,70)
ht<-c(10,20,30)
wd<-c(7,6,5)
th<-c(.9,.5,.1)
cc<-ht*wd*th
cc
mg<-c(50,60,70)
ht<-c(10,20,30)
wd<-c(7,6,5)
th<-c(.5,.5,.5)
cc<-ht*wd*th
cc
th<-c(.5,.4,.3)
cc<-ht*wd*th
cc
th<-c(5,4,3)
cc<-ht*wd*th
cc
ht*wd
mg<-c(50,60,70)
ht<-c(10,15,20)
wd<-c(2,3,4)
th<-c(5,4,3)
cc<-ht*wd*th
cc
ht<-c(10,12,14)
wd<-c(2,3,4)
th<-c(5,4,3)
cc<-ht*wd*th
cc
ht<-c(10,12,14)
wd<-c(4,3,2)
th<-c(5,4,3)
cc<-ht*wd*th
cc
mg<-c(70,60,50)
ht<-c(10,12,14)
wd<-c(4,3,2)
th<-c(5,4,3)
cc<-ht*wd*th
cc
mg/cc
wd<-c(2,3,4)
th<-c(3,4,5)
mg<-c(70,60,50)
ht<-c(10,12,14)
wd<-c(2,3,4)
th<-c(3,4,5)
cc<-ht*wd*th
cc
mg/cc
(mg/cc)*ht
a<-read.csv(file.choose())
a
a<-
a["Classification"]
a<-
a["Classification"]
a<-
a["Classification"]
a<-read.csv(file.choose())
a["Classification"]
a["Classification"=="Correct"]
a$Classification["Correct"]
a$Classification
a$Classification[Correct]
"
a$Classification["Correct"]
a["Correct"]
a["Classification"]
a["Classification"]=="Correct"
a[a["Classification"]=="Correct",]
a<-read.csv(file.choose())
a<- a[a["Classification"]=="Correct",]
a
a<-read.csv(file.choose())
a<- a[a["Classification"]=="Correct",]
a
var.test()
var.test(P ~ ID, data = a)
?var.test
a$P
a$P/(1-a$P)
log(a$P/(1-a$P))
a$logitP<-log(a$P/(1-a$P))
var.test(P ~ ID, data = a)
var.test(logitP ~ ID, data = a)
boxplot(P ~ ID, data = a)
boxplot(logitP ~ ID, data = a)
logitP
a$logitP
boxplot(logitP ~ ID, data = a, main="Boxplot of Logit(P)")
boxplot(logitP ~ ID, data = a, main="Boxplot of Logit(P) by ID")
boxplot(logitP ~ ID, data = a,
main="Boxplot of Logit(P) by ID",
ylab="Logit(P)[log(P/(1-P)")
boxplot(logitP ~ ID, data = a,
main="Boxplot of Logit(P) by ID",
ylab="Logit(P)[log(P/(1-P)",
xlab="ID")
bartlett.test(logitP ~ ID, data = a)
boxplot(logitP ~ ID, data = a,
main="Boxplot of Logit(P) by ID",
ylab="Logit(P)[log(P/(1-P)",
xlab="ID")
var.test(logitP ~ ID, data = a)
hist(a$logitP)
?var.test
dim(a)
?
library(zooaRchGUI)
zooaRch_GUI()
boxplot(logitP ~ ID, data = a,
main="Boxplot of Logit(P) by ID",
ylab="Logit(P)[log(P/(1-P)",
xlab="ID")
a
a
a$ID
as.factor(a$ID)
a$ID<-as.factor(a$ID)
var.test(logitP ~ ID, data = a)
bartlett.test(logitP ~ ID, data = a)
boxplot(logitP ~ ID, data = a,
main="Boxplot of Logit(P) by ID",
ylab="Logit(P)[log(P/(1-P)",
xlab="ID")
a
class(a$ID)
leveneTest(logitP ~ ID, data = a)
library(car)
library(car)
leveneTest(logitP ~ ID, data = a)
?leveneTest
leveneTest(P ~ ID, data = a)
leveneTest(P ~ ID, data = a, "mean")
zooaRch_GUI()
