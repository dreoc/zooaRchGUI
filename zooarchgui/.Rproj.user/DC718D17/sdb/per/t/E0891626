{
    "collab_server" : "",
    "contents" : "# getshapefile function\ngetshapefile <- function() {\n  name <- tclvalue(tkgetOpenFile(\n    filetypes = \"{{ESRI Shapefiles} {.shp}}\"))\n  if (name == \"\") return(data.frame());\n  data <- raster::shapefile(name)\n  file.name <- sub(x = basename(name), pattern = \".shp\",replacement = \"\",ignore.case = TRUE)\n  pos<-1\n  envir <- as.environment(pos)\n  assign(file.name, data, envir = envir)\n}\n\n# gettxtfile function\ngettxtfile <- function() {\n  name <- tclvalue(tkgetOpenFile(\n    filetypes = \"{{Space delimited files} {.txt}}\"))\n  if (name == \"\") return(data.frame());\n  data <- as.data.frame(read.table(name,row.names = 1, sep = \" \"))\n  file.name <- sub(x = basename(name), pattern = \".txt\",replacement = \"\",ignore.case = TRUE)\n  pos<-1\n  envir <- as.environment(pos)\n  assign(file.name, data, envir = envir)\n}\n\n# getxlfile function\ngetxlfile <- function() {\n  name <- tclvalue(tkgetOpenFile(\n    filetypes = \"{{Excel files} {.xls .xlsx}}\"))\n  if (name == \"\") return(data.frame());\n  data <- as.data.frame(read_excel(name,col_names = TRUE))\n  file.name <- sub(x = basename(name), pattern = paste(\".\",tail(unlist(strsplit(basename(name),\"\\\\.\")),1),sep=\"\")\n                   ,replacement = \"\",ignore.case = TRUE)\n  pos<-1\n  envir <- as.environment(pos)\n  assign(file.name, data, envir = envir)\n}\n\n# getspssfile function\ngetspssfile <- function() {\n  name <- tclvalue(tkgetOpenFile(\n    filetypes = \"{{SPSS files} {.sav}}\"))\n  if (name == \"\") return(data.frame());\n  data <- as.data.frame(read.spss(name, to.data.frame=TRUE))\n  file.name <- sub(x = basename(name), pattern = \".sav\",replacement = \"\",ignore.case = TRUE)\n  pos<-1\n  envir <- as.environment(pos)\n  assign(file.name, data, envir = envir)\n}\n\n# getcsvfile function\ngetcsvfile <- function() {\n  name <- tclvalue(tkgetOpenFile(\n    filetypes = \"{{Comma separated files} {.csv}}\"))\n  if (name == \"\") return(data.frame());\n  data <- as.data.frame(read.csv(name,row.names = 1))\n  file.name <- sub(x = basename(name), pattern = \".csv\",replacement = \"\",ignore.case = TRUE)\n  pos<-1\n  envir <- as.environment(pos)\n  assign(file.name, data, envir = envir)\n}\n\n# saveas\nlayout.saveas<-function(e){\n  e$format<-tclVar(\"csv\")\n  e$dir<-tclVar(\"Working Directory\")\n  e$dirval<-tclVar(getwd())\n  e$filename<-tclVar(\"Same as dataFrame Name\")\n  e$savename<-tclVar(\"\")\n  \n  tkwm.title(e$wnd, \"Save Dialog\")\n  tkconfigure(e$layout, text = \"Save as:\")\n  \n  #Name of File\n  put_label(e$layout, \"Name of file:\",2,0,sticky=\"e\")\n  data_labels2 <- ttkentry(e$layout,\n                           textvariable = e$filename, width=10)\n  tkgrid(data_labels2, row = 2, column = 1, sticky=\"ew\", padx = 2)\n  tkfocus(data_labels2) \n  \n  #Directory Radiobuttons\n  put_label(e$layout, \"Save to:\",3,0,sticky=\"e\")\n  rb_frame <- ttkframe(e$layout)\n  sapply(c(\"Working Directory\",\"Choose other Directory\"), function(i) {\n    radio_button <- tk2radiobutton(rb_frame, variable = e$dir,text = i, value = i)\n    tkpack(radio_button, side = \"left\")\n  })\n  tkgrid(rb_frame, row = 3, column = 1, sticky = \"w\")\n  \n  #Data Type Radiobuttons\n  put_label(e$layout, \"Save as:\",4,0,sticky=\"e\")\n  rb_frame2 <- ttkframe(e$layout)\n  sapply(c(\"csv\",\"txt\",\"spss\",\"stata\"), function(i) {\n    radio_button <- tk2radiobutton(rb_frame2, variable = e$format,text = i, value = i)\n    tkpack(radio_button, side = \"left\")\n  })\n  tkgrid(rb_frame2, row = 4, column = 1, sticky = \"w\")\n}\n\nrun.saveas<-function(e){\n    if (tclvalue(e$dir)==\"Working Directory\"){\n        e$dir<-e$dirval\n    } else { e$dir<-tclVar(choose.dir(default = getwd()))}\n    if (tclvalue(e$filename)==\"Same as dataFrame Name\"){\n        e$filename<-e$dataName\n    }\n    e$savename<-paste(tclvalue(e$dir),\"/\",tclvalue(e$filename),\".\",sep=\"\")\n    switch(tclvalue(e$format),\n           csv =  write.csv(x = e$dataFrame, file = paste(e$savename,\"csv\",sep=\"\")),\n           txt =  write.table(x = e$dataFrame, file = paste(e$savename,\"txt\",sep=\"\"), sep=\"\\t\"),\n           #xlsx = xlsx::write.xlsx(x = e$dataFrame, file = paste(e$savename,\"xlsx\",sep=\"\")),\n           spss = suppressWarnings(foreign::write.foreign(df = e$dataFrame, paste(e$savename,\"sps\",sep=\"\"), paste(e$savename,\"sps\",sep=\"\"), package=\"SPSS\")) ,\n           stata = suppressWarnings(foreign::write.dta(dataFrame = e$dataFrame, paste(e$savename,\"dta\",sep=\"\"))) \n           )\n    pos<-1\n    envir <- as.environment(pos)\n    assign(tclvalue(e$filename), e$dataFrame, envir = envir)\n    tkdestroy(e$wnd)\n}\n# getshapefile function\ngetshapefile <- function() {\n  name <- tclvalue(tkgetOpenFile(\n    filetypes = \"{{ESRI Shapefiles} {.shp}}\"))\n  if (name == \"\") return(data.frame());\n  data <- raster::shapefile(name)\n  file.name <- sub(x = basename(name), pattern = \".shp\",replacement = \"\",ignore.case = TRUE)\n  pos<-1\n  envir <- as.environment(pos)\n  assign(file.name, data, envir = envir)\n}\n\n# gettxtfile function\ngettxtfile <- function() {\n  name <- tclvalue(tkgetOpenFile(\n    filetypes = \"{{Space delimited files} {.txt}}\"))\n  if (name == \"\") return(data.frame());\n  data <- as.data.frame(read.table(name,row.names = 1, sep = \" \"))\n  file.name <- sub(x = basename(name), pattern = \".txt\",replacement = \"\",ignore.case = TRUE)\n  pos<-1\n  envir <- as.environment(pos)\n  assign(file.name, data, envir = envir)\n}\n\n# getxlfile function\ngetxlfile <- function() {\n  name <- tclvalue(tkgetOpenFile(\n    filetypes = \"{{Excel files} {.xls .xlsx}}\"))\n  if (name == \"\") return(data.frame());\n  data <- as.data.frame(read_excel(name,col_names = TRUE))\n  file.name <- sub(x = basename(name), pattern = paste(\".\",tail(unlist(strsplit(basename(name),\"\\\\.\")),1),sep=\"\")\n                   ,replacement = \"\",ignore.case = TRUE)\n  pos<-1\n  envir <- as.environment(pos)\n  assign(file.name, data, envir = envir)\n}\n\n# getspssfile function\ngetspssfile <- function() {\n  name <- tclvalue(tkgetOpenFile(\n    filetypes = \"{{SPSS files} {.sav}}\"))\n  if (name == \"\") return(data.frame());\n  data <- as.data.frame(read.spss(name, to.data.frame=TRUE))\n  file.name <- sub(x = basename(name), pattern = \".sav\",replacement = \"\",ignore.case = TRUE)\n  pos<-1\n  envir <- as.environment(pos)\n  assign(file.name, data, envir = envir)\n}\n\n# getcsvfile function\ngetcsvfile <- function() {\n  name <- tclvalue(tkgetOpenFile(\n    filetypes = \"{{Comma separated files} {.csv}}\"))\n  if (name == \"\") return(data.frame());\n  data <- as.data.frame(read.csv(name,row.names = 1))\n  file.name <- sub(x = basename(name), pattern = \".csv\",replacement = \"\",ignore.case = TRUE)\n  pos<-1\n  envir <- as.environment(pos)\n  assign(file.name, data, envir = envir)\n}\n\n# saveas\nlayout.saveas<-function(e){\n  e$format<-tclVar(\"csv\")\n  e$dir<-tclVar(\"Working Directory\")\n  e$dirval<-tclVar(getwd())\n  e$filename<-tclVar(\"Same as dataFrame Name\")\n  e$savename<-tclVar(\"\")\n  \n  tkwm.title(e$wnd, \"Save Dialog\")\n  tkconfigure(e$layout, text = \"Save as:\")\n  \n  #Name of File\n  put_label(e$layout, \"Name of file:\",2,0,sticky=\"e\")\n  data_labels2 <- ttkentry(e$layout,\n                           textvariable = e$filename, width=10)\n  tkgrid(data_labels2, row = 2, column = 1, sticky=\"ew\", padx = 2)\n  tkfocus(data_labels2) \n  \n  #Directory Radiobuttons\n  put_label(e$layout, \"Save to:\",3,0,sticky=\"e\")\n  rb_frame <- ttkframe(e$layout)\n  sapply(c(\"Working Directory\",\"Choose other Directory\"), function(i) {\n    radio_button <- tk2radiobutton(rb_frame, variable = e$dir,text = i, value = i)\n    tkpack(radio_button, side = \"left\")\n  })\n  tkgrid(rb_frame, row = 3, column = 1, sticky = \"w\")\n  \n  #Data Type Radiobuttons\n  put_label(e$layout, \"Save as:\",4,0,sticky=\"e\")\n  rb_frame2 <- ttkframe(e$layout)\n  sapply(c(\"csv\",\"txt\",\"spss\",\"stata\"), function(i) {\n    radio_button <- tk2radiobutton(rb_frame2, variable = e$format,text = i, value = i)\n    tkpack(radio_button, side = \"left\")\n  })\n  tkgrid(rb_frame2, row = 4, column = 1, sticky = \"w\")\n}\n\nrun.saveas<-function(e){\n    if (tclvalue(e$dir)==\"Working Directory\"){\n        e$dir<-e$dirval\n    } else { e$dir<-tclVar(choose.dir(default = getwd()))}\n    if (tclvalue(e$filename)==\"Same as dataFrame Name\"){\n        e$filename<-e$dataName\n    }\n    e$savename<-paste(tclvalue(e$dir),\"/\",tclvalue(e$filename),\".\",sep=\"\")\n    switch(tclvalue(e$format),\n           csv =  write.csv(x = e$dataFrame, file = paste(e$savename,\"csv\",sep=\"\")),\n           txt =  write.table(x = e$dataFrame, file = paste(e$savename,\"txt\",sep=\"\"), sep=\"\\t\"),\n           #xlsx = xlsx::write.xlsx(x = e$dataFrame, file = paste(e$savename,\"xlsx\",sep=\"\")),\n           spss = suppressWarnings(foreign::write.foreign(df = e$dataFrame, paste(e$savename,\"sps\",sep=\"\"), paste(e$savename,\"sps\",sep=\"\"), package=\"SPSS\")) ,\n           stata = suppressWarnings(foreign::write.dta(dataFrame = e$dataFrame, paste(e$savename,\"dta\",sep=\"\"))) \n           )\n    pos<-1\n    envir <- as.environment(pos)\n    assign(tclvalue(e$filename), e$dataFrame, envir = envir)\n    tkdestroy(e$wnd)\n}\n",
    "created" : 1502252063658.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "464005576",
    "id" : "E0891626",
    "lastKnownWriteTime" : 1502259003,
    "last_content_update" : 1502259003,
    "path" : "E:/Dropbox (LCA)/Documents/Research/zoaRch_project/zooaRchGUI_v1/zooarchGUI/R/File.r",
    "project_path" : "R/File.r",
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}